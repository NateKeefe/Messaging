<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AuthenticationCodeExpiredError" xml:space="preserve">
    <value>The authentication code has expired, please re-authenticate.</value>
  </data>
  <data name="CachedServerMetadataRetrieve" xml:space="preserve">
    <value>Retrieving metadata from cache took {0}</value>
  </data>
  <data name="CompanyName" xml:space="preserve">
    <value>Scribe labs</value>
  </data>
  <data name="ConnectionErrorSuggestions" xml:space="preserve">
    <value>Verify that the associated connection information is valid and that you have access to the QuickBooks REST API.</value>
  </data>
  <data name="ConnectorError" xml:space="preserve">
    <value>The following error has occurred in the QuickBooks Connector:</value>
  </data>
  <data name="ConnectorFatalError" xml:space="preserve">
    <value>A fatal error has occurred in the QuickBooks Connector:</value>
  </data>
  <data name="ConnectorName" xml:space="preserve">
    <value>QuickBooks Online Connector</value>
  </data>
  <data name="ErrorArrayIndexLimitExceeded" xml:space="preserve">
    <value>arrayIndex cannot be greater than the buffer size..</value>
  </data>
  <data name="ErrorCircularBufferCapacity" xml:space="preserve">
    <value>Capacity must be greater than zero.</value>
  </data>
  <data name="ErrorDataFormatFmt" xml:space="preserve">
    <value>Unable to format the data '{0}' for {1}.{2}.</value>
  </data>
  <data name="ErrorEmptyRightValue" xml:space="preserve">
    <value>Unable to process this query as the right value is empty for the comparison expression. Supplied filter value is invalid.</value>
  </data>
  <data name="ErrorEntityMetadataNotFoundFmt" xml:space="preserve">
    <value>Unable to find the entity {0} in the metadata cache.</value>
  </data>
  <data name="ErrorEntityNotSupportedFmt" xml:space="preserve">
    <value>The entity {0} is not supported.</value>
  </data>
  <data name="ErrorFieldMetadataNotFoundFmt" xml:space="preserve">
    <value>Unable to find the field {0} for the entity {1} in the metadata cache.</value>
  </data>
  <data name="ErrorInvalidComparisonExpression" xml:space="preserve">
    <value>Expression's type is declared as 'Comparison', but when cast to 'ComparisonExpression' its value is null.</value>
  </data>
  <data name="ErrorInvalidFilterCriteriaFieldName" xml:space="preserve">
    <value>Invalid filter criteria: The {0} field can't be filtered on.</value>
  </data>
  <data name="ErrorMessageIntroduction" xml:space="preserve">
    <value>The following exception message was returned from the QuickBooks Connector:</value>
  </data>
  <data name="ErrorMessageIntroduction1" xml:space="preserve">
    <value>The following exception message was returned from the QuickBooks Connector:</value>
  </data>
  <data name="ErrorMultiObjectsNotAllowed" xml:space="preserve">
    <value>Multi-object operations are not allowed. More than one object matched the filter criteria.</value>
  </data>
  <data name="ErrorNullConnectionDefinition" xml:space="preserve">
    <value>The connection definition is null</value>
  </data>
  <data name="ErrorNullLeftValue" xml:space="preserve">
    <value>Unable to process this query as the left value is null for the comparison expression. Supplied filter name is invalid.</value>
  </data>
  <data name="ErrorNullRightValue" xml:space="preserve">
    <value>Unable to process this query as the right value is null for the comparison expression. Supplied filter value is invalid.</value>
  </data>
  <data name="ErrorParsingHtml" xml:space="preserve">
    <value>Error parsing HTML results from QuickBooks using status code instead.</value>
  </data>
  <data name="ErrorQueryHasLogicalExpression" xml:space="preserve">
    <value>The query is too complex. Logical operations such as 'And' and 'Or' are not supported. If records are being processed by last run date additional filter criteria can't be defined.</value>
  </data>
  <data name="ErrorQueryNotSupportedInvaildFilter" xml:space="preserve">
    <value>This query isn't supported. Contact can be filtered by {0}, {1}, {2} or {3}</value>
  </data>
  <data name="ErrorRefreshTokenInactivePortal" xml:space="preserve">
    <value>Unable to refresh the OAuth access token due to the following error: HTTP 410 - Inactive portal</value>
  </data>
  <data name="ErrorRefreshTokenInternalServerError" xml:space="preserve">
    <value>Unable to refresh the OAuth access token due to the following error: HTTP 500 - Internal server error</value>
  </data>
  <data name="ErrorRefreshTokenNoLongerValid" xml:space="preserve">
    <value>Unable to refresh the Oauth access token due to the following error: HTTP 400 - The refresh token is no longer valid for for portal {0}. There will only ever be one active access token at a time for each portal.</value>
  </data>
  <data name="ErrorRefreshTokenUnauthorized" xml:space="preserve">
    <value>Unable to refresh the OAuth access token due to the following error: HTTP 401 - Unauthorized</value>
  </data>
  <data name="ErrorRefreshTokenUnknown" xml:space="preserve">
    <value>Unable to refresh the OAuth access token due to the following error: HTTP {0} - {1}</value>
  </data>
  <data name="ErrorTimeout" xml:space="preserve">
    <value>The connection is not available at this time.</value>
  </data>
  <data name="ErrorUnknownOperation" xml:space="preserve">
    <value>Unknown operation : {0}</value>
  </data>
  <data name="FormatOperatorNameGreaterThanOrEqual" xml:space="preserve">
    <value>greater than or equal</value>
  </data>
  <data name="FormatOperatorNameIsNotNull" xml:space="preserve">
    <value>is not null</value>
  </data>
  <data name="FormatOperatorNameIsNull" xml:space="preserve">
    <value>is null</value>
  </data>
  <data name="FormatOperatorNameLessThanOrEqual" xml:space="preserve">
    <value>less than or equal</value>
  </data>
  <data name="FormatOperatorNameNotEqual" xml:space="preserve">
    <value>not equal</value>
  </data>
  <data name="FormatOperatorNameNotLike" xml:space="preserve">
    <value>not like</value>
  </data>
  <data name="FormattedRetryWarning" xml:space="preserve">
    <value>{0} Retry {1} of 3</value>
  </data>
  <data name="FormattedRetryWarning1" xml:space="preserve">
    <value>{0} Retry {1} of 3</value>
  </data>
  <data name="HTTPError" xml:space="preserve">
    <value>There was an error submitting the http call.</value>
  </data>
  <data name="LookupConditionNotFound" xml:space="preserve">
    <value>The {0} was not found.</value>
  </data>
  <data name="MetadataRetrievalTime" xml:space="preserve">
    <value>Retrieving the metadata from {0} took {1} seconds.</value>
  </data>
  <data name="RefresedAccessToken" xml:space="preserve">
    <value>Successfully refreshed the access token ConnectionDbId: {0} PortalId: {1}</value>
  </data>
  <data name="RetrieveObjectDefinitionMethod" xml:space="preserve">
    <value>RetrieveObjectDefinitionMethod.</value>
  </data>
  <data name="RetrieveObjectDefinitionsMethod" xml:space="preserve">
    <value>RetrieveObjectDefinitionsMethod.</value>
  </data>
  <data name="SuccessfulOperation" xml:space="preserve">
    <value>Successful operation.</value>
  </data>
  <data name="TimeoutErrorFormat" xml:space="preserve">
    <value>{0} {1}. The QuickBooks service is not available at this time.</value>
  </data>
  <data name="TraceExecuteOperation" xml:space="preserve">
    <value>ExecuteOperation</value>
  </data>
  <data name="TraceExecuteQuery" xml:space="preserve">
    <value>ExecuteQuery</value>
  </data>
  <data name="TracePreconnectMethod" xml:space="preserve">
    <value>Preconnect</value>
  </data>
  <data name="TraceRetrieveActionDefinitions" xml:space="preserve">
    <value>RetrieveActionDefinitions</value>
  </data>
  <data name="UnknownDataTypeFormat" xml:space="preserve">
    <value>The unknown data type {0} was converted to a System.Object data type</value>
  </data>
  <data name="ValidationErrorRequiredField" xml:space="preserve">
    <value>This field is required.</value>
  </data>
  <data name="WebServiceMethodCallTime" xml:space="preserve">
    <value>The QuickBooks web service {0} method call took {1} seconds.</value>
  </data>
</root>